{
  "version": 3,
  "sources": ["../../svelte/src/internal/client/errors.js", "../../svelte/src/internal/client/constants.js", "../../svelte/src/internal/client/reactivity/effects.js", "../../svelte/src/internal/client/dom/task.js", "../../svelte/src/internal/client/warnings.js", "../../svelte/src/constants.js", "../../svelte/src/internal/client/dev/ownership.js", "../../svelte/src/internal/client/reactivity/deriveds.js", "../../svelte/src/internal/shared/errors.js", "../../svelte/src/internal/client/runtime.js", "../../svelte/src/internal/client/reactivity/sources.js", "../../svelte/src/internal/shared/warnings.js", "../../svelte/src/internal/shared/validate.js"],
  "sourcesContent": ["/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_checkbox_value\");\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_export\");\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_not_bindable\");\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_changed\");\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_invalid_new\");\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"each_key_duplicate\");\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_teardown\");\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_unowned_derived\");\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_orphan\");\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_update_depth_exceeded\");\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_failed\");\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_legacy_only\");\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_invalid_value\");\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_rest_readonly\");\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"rune_outside_svelte\");\n\t}\n}\n\n/**\n * The argument to `$state.frozen(...)` cannot be an object created with `$state(...)`. You should create a copy of it first, for example with `$state.snapshot`\n * @returns {never}\n */\nexport function state_frozen_invalid_argument() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_frozen_invalid_argument\\nThe argument to \\`$state.frozen(...)\\` cannot be an object created with \\`$state(...)\\`. You should create a copy of it first, for example with \\`$state.snapshot\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_frozen_invalid_argument\");\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_prototype_fixed\");\n\t}\n}\n\n/**\n * Updating state inside a derived is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived is forbidden. If the value should not be reactive, declare it without \\`$state\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_mutation\");\n\t}\n}\n\n/**\n * The `this={...}` property of a `<svelte:component>` must be a Svelte component, if defined\n * @returns {never}\n */\nexport function svelte_component_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_component_invalid_this_value\\nThe \\`this={...}\\` property of a \\`<svelte:component>\\` must be a Svelte component, if defined`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_component_invalid_this_value\");\n\t}\n}", "export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const UNOWNED = 1 << 7;\nexport const DISCONNECTED = 1 << 8;\nexport const CLEAN = 1 << 9;\nexport const DIRTY = 1 << 10;\nexport const MAYBE_DIRTY = 1 << 11;\nexport const INERT = 1 << 12;\nexport const DESTROYED = 1 << 13;\nexport const EFFECT_RAN = 1 << 14;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 15;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_FROZEN_SYMBOL = Symbol('$state.frozen');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n", "import {\n\tcheck_dirtiness,\n\tcurrent_component_context,\n\tcurrent_effect,\n\tcurrent_reaction,\n\tdestroy_effect_children,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_current_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (current_effect === null && current_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (current_reaction !== null && (current_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {import(\"#client\").Effect} effect\n * @param {import(\"#client\").Reaction} parent_effect\n */\nexport function push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {import('#client').Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\n\t/** @type {import('#client').Effect} */\n\tvar effect = {\n\t\tctx: current_component_context,\n\t\tdeps: null,\n\t\tnodes: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : current_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes === null &&\n\t\teffect.teardown === null;\n\n\tif (!inert && !is_root && push) {\n\t\tif (current_effect !== null) {\n\t\t\tpush_effect(effect, current_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (current_reaction !== null && (current_reaction.f & DERIVED) !== 0) {\n\t\t\tpush_effect(effect, current_reaction);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (current_reaction === null) {\n\t\treturn false;\n\t}\n\n\treturn (current_reaction.f & UNOWNED) === 0;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tcurrent_effect !== null &&\n\t\t(current_effect.f & RENDER_EFFECT) !== 0 &&\n\t\t// TODO do we actually need this? removing them changes nothing\n\t\tcurrent_component_context !== null &&\n\t\t!current_component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {import('#client').ComponentContext} */ (current_component_context);\n\t\t(context.e ??= []).push(fn);\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {import('#client').ComponentContextLegacy} */ (current_component_context);\n\n\t/** @type {{ effect: null | import('#client').Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail-out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {import('#client').ComponentContextLegacy} */ (current_component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {import('#client').Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {import(\"#client\").Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = current_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_current_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_current_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes !== null) {\n\t\t/** @type {import('#client').TemplateNode | null} */\n\t\tvar node = effect.nodes.start;\n\t\tvar end = effect.nodes.end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {import('#client').TemplateNode | null} */\n\t\t\tvar next =\n\t\t\t\tnode === end ? null : /** @type {import('#client').TemplateNode} */ (node.nextSibling);\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tif (effect.transitions) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && (effect.f & BRANCH_EFFECT) !== 0 && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.parent =\n\t\teffect.fn =\n\t\teffect.nodes =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {import('#client').Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {import('#client').Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {import('#client').TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {import('#client').TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @param {import('#client').TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {import('#client').Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_attribute_changed\");\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : \"The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_html_changed\");\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : \"Hydration failed because the initial UI does not match what was rendered on the server\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"hydration_mismatch\");\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"lifecycle_double_unmount\");\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"ownership_invalid_binding\");\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : \"Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"ownership_invalid_mutation\");\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results. Consider using `$state.is(a, b)` instead\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results. Consider using \\`$state.is(a, b)\\` instead`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"state_proxy_equality_mismatch\");\n\t}\n}", "export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\nexport const EACH_KEYED = 1 << 2;\n\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 3;\nexport const EACH_IS_ANIMATED = 1 << 4;\nexport const EACH_IS_STRICT_EQUALS = 1 << 6;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 3;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const ORIGINAL = Symbol('original');\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nexport const RawTextElements = ['textarea', 'script', 'style', 'title'];\n\n/** List of Element events that will be delegated */\nexport const DelegatedEvents = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/** List of Element events that will be delegated and are passive */\nexport const PassiveDelegatedEvents = ['touchstart', 'touchmove', 'touchend'];\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nexport const AttributeAliases = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly'\n};\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nexport const DOMBooleanAttributes = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\nexport const namespace_svg = 'http://www.w3.org/2000/svg';\nexport const namespace_mathml = 'http://www.w3.org/1998/Math/MathML';\n\n// while `input` is also an interactive element, it is never moved by the browser, so we don't need to check for it\nexport const interactive_elements = new Set([\n\t'a',\n\t'button',\n\t'iframe',\n\t'embed',\n\t'select',\n\t'textarea'\n]);\n\nexport const disallowed_paragraph_contents = [\n\t'address',\n\t'article',\n\t'aside',\n\t'blockquote',\n\t'details',\n\t'div',\n\t'dl',\n\t'fieldset',\n\t'figcapture',\n\t'figure',\n\t'footer',\n\t'form',\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6',\n\t'header',\n\t'hr',\n\t'menu',\n\t'nav',\n\t'ol',\n\t'pre',\n\t'section',\n\t'table',\n\t'ul',\n\t'p'\n];\n\n// https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\nconst implied_end_tags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n/**\n * @param {string} tag\n * @param {string} parent_tag\n * @returns {boolean}\n */\nexport function is_tag_valid_with_parent(tag, parent_tag) {\n\t// First, let's check if we're in an unusual parsing mode...\n\tswitch (parent_tag) {\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\t\tcase 'select':\n\t\t\treturn (\n\t\t\t\ttag === 'option' ||\n\t\t\t\ttag === 'optgroup' ||\n\t\t\t\ttag === '#text' ||\n\t\t\t\ttag === 'hr' ||\n\t\t\t\ttag === 'script' ||\n\t\t\t\ttag === 'template'\n\t\t\t);\n\t\tcase 'optgroup':\n\t\t\treturn tag === 'option' || tag === '#text';\n\t\t// Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n\t\t// but\n\t\tcase 'option':\n\t\t\treturn tag === '#text';\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t\t// No special behavior since these rules fall back to \"in body\" mode for\n\t\t// all except special table nodes which cause bad parsing behavior anyway.\n\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\t\tcase 'tr':\n\t\t\treturn (\n\t\t\t\ttag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template'\n\t\t\t);\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\t\tcase 'tbody':\n\t\tcase 'thead':\n\t\tcase 'tfoot':\n\t\t\treturn tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\t\tcase 'colgroup':\n\t\t\treturn tag === 'col' || tag === 'template';\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\t\tcase 'table':\n\t\t\treturn (\n\t\t\t\ttag === 'caption' ||\n\t\t\t\ttag === 'colgroup' ||\n\t\t\t\ttag === 'tbody' ||\n\t\t\t\ttag === 'tfoot' ||\n\t\t\t\ttag === 'thead' ||\n\t\t\t\ttag === 'style' ||\n\t\t\t\ttag === 'script' ||\n\t\t\t\ttag === 'template'\n\t\t\t);\n\t\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\t\tcase 'head':\n\t\t\treturn (\n\t\t\t\ttag === 'base' ||\n\t\t\t\ttag === 'basefont' ||\n\t\t\t\ttag === 'bgsound' ||\n\t\t\t\ttag === 'link' ||\n\t\t\t\ttag === 'meta' ||\n\t\t\t\ttag === 'title' ||\n\t\t\t\ttag === 'noscript' ||\n\t\t\t\ttag === 'noframes' ||\n\t\t\t\ttag === 'style' ||\n\t\t\t\ttag === 'script' ||\n\t\t\t\ttag === 'template'\n\t\t\t);\n\t\t// https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\t\tcase 'html':\n\t\t\treturn tag === 'head' || tag === 'body' || tag === 'frameset';\n\t\tcase 'frameset':\n\t\t\treturn tag === 'frame';\n\t\tcase '#document':\n\t\t\treturn tag === 'html';\n\t}\n\n\t// Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n\t// where the parsing rules cause implicit opens or closes to be added.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\tswitch (tag) {\n\t\tcase 'h1':\n\t\tcase 'h2':\n\t\tcase 'h3':\n\t\tcase 'h4':\n\t\tcase 'h5':\n\t\tcase 'h6':\n\t\t\treturn (\n\t\t\t\tparent_tag !== 'h1' &&\n\t\t\t\tparent_tag !== 'h2' &&\n\t\t\t\tparent_tag !== 'h3' &&\n\t\t\t\tparent_tag !== 'h4' &&\n\t\t\t\tparent_tag !== 'h5' &&\n\t\t\t\tparent_tag !== 'h6'\n\t\t\t);\n\n\t\tcase 'rp':\n\t\tcase 'rt':\n\t\t\treturn implied_end_tags.indexOf(parent_tag) === -1;\n\n\t\tcase 'body':\n\t\tcase 'caption':\n\t\tcase 'col':\n\t\tcase 'colgroup':\n\t\tcase 'frameset':\n\t\tcase 'frame':\n\t\tcase 'head':\n\t\tcase 'html':\n\t\tcase 'tbody':\n\t\tcase 'td':\n\t\tcase 'tfoot':\n\t\tcase 'th':\n\t\tcase 'thead':\n\t\tcase 'tr':\n\t\t\t// These tags are only valid with a few parents that have special child\n\t\t\t// parsing rules -- if we're down here, then none of those matched and\n\t\t\t// so we allow it only if we don't know what the parent is, as all other\n\t\t\t// cases are invalid.\n\t\t\treturn parent_tag == null;\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {string} name\n * @param {\"include-on\" | \"exclude-on\"} [mode] - wether if name starts with `on` or `on` is excluded at this point\n */\nexport function is_capture_event(name, mode = 'exclude-on') {\n\tif (!name.endsWith('capture')) {\n\t\treturn false;\n\t}\n\treturn mode == 'exclude-on'\n\t\t? name !== 'gotpointercapture' && name !== 'lostpointercapture'\n\t\t: name !== 'ongotpointercapture' && name !== 'onlostpointercapture';\n}\n\nexport const reserved = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\nconst void_element_names = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/** @param {string} name */\nexport function is_void(name) {\n\treturn void_element_names.includes(name) || name.toLowerCase() === '!doctype';\n}\n", "/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../runtime.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any} owner\n * @param {boolean} [global]\n */\nexport function add_owner(object, owner, global = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner[FILENAME] !== component[FILENAME]) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n */\nexport function add_owner_effect(get_object, Component) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component);\n\t});\n}\n\n/**\n * @param {ProxyMetadata<any> | null} from\n * @param {ProxyMetadata<any>} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function} owner\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif (metadata.owners !== null) {\n\t\t\tmetadata.owners.add(owner);\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\n\t\tif (object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n", "import { CLEAN, DERIVED, DESTROYED, DIRTY, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tcurrent_reaction,\n\tcurrent_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tcurrent_skip_reaction,\n\tupdate_reaction,\n\tdestroy_effect_children,\n\tincrement_version\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\n\nexport let updating_derived = false;\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {import('#client').Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tlet flags = DERIVED | DIRTY;\n\tif (current_effect === null) flags |= UNOWNED;\n\n\t/** @type {import('#client').Derived<V>} */\n\tconst signal = {\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0\n\t};\n\n\tif (current_reaction !== null && (current_reaction.f & DERIVED) !== 0) {\n\t\tvar current_derived = /** @type {import('#client').Derived} */ (current_reaction);\n\t\tif (current_derived.deriveds === null) {\n\t\t\tcurrent_derived.deriveds = [signal];\n\t\t} else {\n\t\t\tcurrent_derived.deriveds.push(signal);\n\t\t}\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {import('#client').Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {import('#client').Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tdestroy_effect_children(derived);\n\tvar deriveds = derived.deriveds;\n\n\tif (deriveds !== null) {\n\t\tderived.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar previous_updating_derived = updating_derived;\n\tupdating_derived = true;\n\tdestroy_derived_children(derived);\n\tvar value = update_reaction(derived);\n\tupdating_derived = previous_updating_derived;\n\n\tvar status =\n\t\t(current_skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null\n\t\t\t? MAYBE_DIRTY\n\t\t\t: CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {import('#client').Derived} signal\n * @returns {void}\n */\nexport function destroy_derived(signal) {\n\tdestroy_derived_children(signal);\n\tremove_reactions(signal, 0);\n\tset_signal_status(signal, DESTROYED);\n\n\t// TODO we need to ensure we remove the derived from any parent derives\n\n\tsignal.first =\n\t\tsignal.last =\n\t\tsignal.deps =\n\t\tsignal.reactions =\n\t\t// @ts-expect-error `signal.fn` cannot be `null` while the signal is alive\n\t\tsignal.fn =\n\t\t\tnull;\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_outside_component\");\n\t}\n}\n\n/**\n * The argument to `{@render ...}` must be a snippet function, not a component or a slot with a `let:` directive or some other kind of function. If you want to dynamically render one snippet or another, use `$derived` and pass its result to `{@render ...}`\n * @returns {never}\n */\nexport function render_tag_invalid_argument() {\n\tif (DEV) {\n\t\tconst error = new Error(`render_tag_invalid_argument\\nThe argument to \\`{@render ...}\\` must be a snippet function, not a component or a slot with a \\`let:\\` directive or some other kind of function. If you want to dynamically render one snippet or another, use \\`$derived\\` and pass its result to \\`{@render ...}\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"render_tag_invalid_argument\");\n\t}\n}\n\n/**\n * A snippet must be rendered with `{@render ...}`\n * @returns {never}\n */\nexport function snippet_used_as_component() {\n\tif (DEV) {\n\t\tconst error = new Error(`snippet_used_as_component\\nA snippet must be rendered with \\`{@render ...}\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"snippet_used_as_component\");\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"store_invalid_shape\");\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"svelte_element_invalid_this_value\");\n\t}\n}", "import { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_effect,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\n// Used for controlling the flush of effects.\nlet current_scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {import('#client').Effect[]} */\nlet current_queued_root_effects = [];\n\nlet flush_count = 0;\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | import('#client').Reaction} */\nexport let current_reaction = null;\n\n/** @param {null | import('#client').Reaction} reaction */\nexport function set_current_reaction(reaction) {\n\tcurrent_reaction = reaction;\n}\n\n/** @type {null | import('#client').Effect} */\nexport let current_effect = null;\n\n/** @param {null | import('#client').Effect} effect */\nexport function set_current_effect(effect) {\n\tcurrent_effect = effect;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | import('#client').Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | import('#client').Source[]}\n */\nexport let current_untracked_writes = null;\n\n/** @param {null | import('#client').Source[]} value */\nexport function set_current_untracked_writes(value) {\n\tcurrent_untracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds */\nlet current_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let current_skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\nexport let is_signals_recorded = false;\nlet captured_signals = new Set();\n\n// Handling runtime component context\n/** @type {import('#client').ComponentContext | null} */\nexport let current_component_context = null;\n\n/** @param {import('#client').ComponentContext | null} context */\nexport function set_current_component_context(context) {\n\tcurrent_component_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {import('#client').ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {import('#client').ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn current_version++;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn current_component_context !== null && current_component_context.l === null;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {import('#client').Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {import('#client').Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {import('#client').Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (is_unowned) {\n\t\t\t\t\t// TODO is there a more logical place to do this work?\n\t\t\t\t\tif (!current_skip_reaction && !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !current_skip_reaction)\n\t\t\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t\t\t// if linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tset_signal_status(reaction, CLEAN);\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Error} error\n * @param {import(\"#client\").Effect} effect\n * @param {import(\"#client\").ComponentContext | null} component_context\n */\nfunction handle_error(error, effect, component_context) {\n\t// Given we don't yet have error boundaries, we will just always throw.\n\tif (!DEV || handled_errors.has(error) || component_context === null) {\n\t\tthrow error;\n\t}\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {import(\"#client\").ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\t/** @type {string} */\n\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\tif (filename) {\n\t\t\tconst file = filename.split('/').pop();\n\t\t\tcomponent_stack.push(file);\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack + new_lines.join('\\n')\n\t\t});\n\t}\n\n\thandled_errors.add(error);\n\tthrow error;\n}\n\n/**\n * @template V\n * @param {import('#client').Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = current_untracked_writes;\n\tvar previous_reaction = current_reaction;\n\tvar previous_skip_reaction = current_skip_reaction;\n\n\tnew_deps = /** @type {null | import('#client').Value[]} */ (null);\n\tskipped_deps = 0;\n\tcurrent_untracked_writes = null;\n\tcurrent_reaction = (reaction.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tcurrent_skip_reaction = !is_flushing_effect && (reaction.f & UNOWNED) !== 0;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar dependency;\n\t\t\tvar i;\n\n\t\t\tif (deps !== null) {\n\t\t\t\t/** All dependencies of the reaction, including those tracked on the previous run */\n\t\t\t\tvar array = skipped_deps === 0 ? new_deps : deps.slice(0, skipped_deps).concat(new_deps);\n\n\t\t\t\t// If we have more than 16 elements in the array then use a Set for faster performance\n\t\t\t\t// TODO: evaluate if we should always just use a Set or not here?\n\t\t\t\tvar set = array.length > 16 ? new Set(array) : null;\n\n\t\t\t\t// Remove dependencies that should no longer be tracked\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\tdependency = deps[i];\n\n\t\t\t\t\tif (set !== null ? !set.has(dependency) : !array.includes(dependency)) {\n\t\t\t\t\t\tremove_reaction(reaction, dependency);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!current_skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\tdependency = deps[i];\n\t\t\t\t\tvar reactions = dependency.reactions;\n\n\t\t\t\t\tif (reactions === null) {\n\t\t\t\t\t\tdependency.reactions = [reaction];\n\t\t\t\t\t} else if (\n\t\t\t\t\t\treactions[reactions.length - 1] !== reaction &&\n\t\t\t\t\t\t!reactions.includes(reaction)\n\t\t\t\t\t) {\n\t\t\t\t\t\treactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tcurrent_untracked_writes = previous_untracked_writes;\n\t\tcurrent_reaction = previous_reaction;\n\t\tcurrent_skip_reaction = previous_skip_reaction;\n\t}\n}\n\n/**\n * @template V\n * @param {import('#client').Reaction} signal\n * @param {import('#client').Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tconst reactions = dependency.reactions;\n\tlet reactions_length = 0;\n\tif (reactions !== null) {\n\t\treactions_length = reactions.length - 1;\n\t\tconst index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tif (reactions_length === 0) {\n\t\t\t\tdependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[reactions_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (reactions_length === 0 && (dependency.f & DERIVED) !== 0) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {import('#client').Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {import('#client').Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tvar active_dependencies = start_index === 0 ? null : dependencies.slice(0, start_index);\n\tvar seen = new Set();\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tvar dependency = dependencies[i];\n\n\t\tif (seen.has(dependency)) continue;\n\t\tseen.add(dependency);\n\n\t\t// Avoid removing a reaction if we know that it is active (start_index will not be 0)\n\t\tif (active_dependencies === null || !active_dependencies.includes(dependency)) {\n\t\t\tremove_reaction(signal, dependency);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('#client').Reaction} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {import('#client').Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar component_context = effect.ctx;\n\n\tvar previous_effect = current_effect;\n\tvar previous_component_context = current_component_context;\n\n\tcurrent_effect = effect;\n\tcurrent_component_context = component_context;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) === 0) {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\n\t\teffect.version = current_version;\n\t} catch (error) {\n\t\thandle_error(/** @type {Error} */ (error), effect, current_component_context);\n\t} finally {\n\t\tcurrent_effect = previous_effect;\n\t\tcurrent_component_context = previous_component_context;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\te.effect_update_depth_exceeded();\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<import('#client').Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\t// When working with custom elements, the root effects might not have a root\n\t\t\tif (effect.first === null && (effect.f & BRANCH_EFFECT) === 0) {\n\t\t\t\tflush_queued_effects([effect]);\n\t\t\t} else {\n\t\t\t\t/** @type {import('#client').Effect[]} */\n\t\t\t\tvar collected_effects = [];\n\n\t\t\t\tprocess_effects(effect, collected_effects);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<import('#client').Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && check_dirtiness(effect)) {\n\t\t\tupdate_effect(effect);\n\n\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t// immediate effects.\n\t\t\tif (effect.deps === null && effect.first === null && effect.nodes === null) {\n\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t} else {\n\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\teffect.fn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = current_queued_root_effects;\n\tcurrent_queued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t}\n}\n\n/**\n * @param {import('#client').Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (current_scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & BRANCH_EFFECT) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t}\n\n\tcurrent_queued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {import('#client').Effect} effect\n * @param {import('#client').Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\t// TODO: we probably don't need to check for destroyed as it shouldn't be encountered?\n\t\tvar is_active = (flags & (DESTROYED | INERT)) === 0;\n\t\tvar is_branch = flags & BRANCH_EFFECT;\n\t\tvar is_clean = (flags & CLEAN) !== 0;\n\t\tvar child = current_effect.first;\n\n\t\t// Skip this branch if it's clean\n\t\tif (is_active && (!is_branch || !is_clean)) {\n\t\t\tif (is_branch) {\n\t\t\t\tset_signal_status(current_effect, CLEAN);\n\t\t\t}\n\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (!is_branch && check_dirtiness(current_effect)) {\n\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t// Child might have been mutated since running the effect\n\t\t\t\t\tchild = current_effect.first;\n\t\t\t\t}\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\tif (is_branch || is_clean) {\n\t\t\t\t\tif (child !== null) {\n\t\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\teffects.push(current_effect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar sibling = current_effect.next;\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @param {boolean} [flush_previous]\n * @returns {any}\n */\nexport function flush_sync(fn, flush_previous = true) {\n\tvar previous_scheduler_mode = current_scheduler_mode;\n\tvar previous_queued_root_effects = current_queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {import('#client').Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tcurrent_scheduler_mode = FLUSH_SYNC;\n\t\tcurrent_queued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tif (flush_previous) {\n\t\t\tflush_queued_root_effects(previous_queued_root_effects);\n\t\t}\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (current_queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\n\t\treturn result;\n\t} finally {\n\t\tcurrent_scheduler_mode = previous_scheduler_mode;\n\t\tcurrent_queued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {import('#client').Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn signal.v;\n\t}\n\n\tif (is_signals_recorded) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (current_reaction !== null) {\n\t\tvar deps = current_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t}\n\n\t\t// Otherwise, create or push to `new_deps`, but only if this\n\t\t// dependency wasn't the last one that was accessed\n\t\telse if (deps === null || skipped_deps === 0 || deps[skipped_deps - 1] !== signal) {\n\t\t\tif (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else if (new_deps[new_deps.length - 1] !== signal) {\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tcurrent_untracked_writes !== null &&\n\t\t\tcurrent_effect !== null &&\n\t\t\t(current_effect.f & CLEAN) !== 0 &&\n\t\t\t(current_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tcurrent_untracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(current_effect, DIRTY);\n\t\t\tschedule_effect(current_effect);\n\t\t}\n\t}\n\n\tif ((flags & DERIVED) !== 0) {\n\t\tvar derived = /** @type {import('#client').Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar previous_is_signals_recorded = is_signals_recorded;\n\tvar previous_captured_signals = captured_signals;\n\tis_signals_recorded = true;\n\tcaptured_signals = new Set();\n\tvar captured = captured_signals;\n\tvar signal;\n\ttry {\n\t\tuntrack(fn);\n\t} finally {\n\t\tis_signals_recorded = previous_is_signals_recorded;\n\t\tif (is_signals_recorded) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\tfor (signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {import('#client').Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\tmutate(dep, null /* doesnt matter */);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmutate(signal, null /* doesnt matter */);\n\t\t}\n\t}\n}\n\n/**\n * Use `untrack` to prevent something from being treated as an `$effect`/`$derived` dependency.\n *\n * https://svelte-5-preview.vercel.app/docs/functions#untrack\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = current_reaction;\n\ttry {\n\t\tcurrent_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tcurrent_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {import('#client').Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @template V\n * @param {V | import('#client').Value<V>} val\n * @returns {val is import('#client').Value<V>}\n */\nexport function is_signal(val) {\n\treturn (\n\t\ttypeof val === 'object' &&\n\t\tval !== null &&\n\t\ttypeof (/** @type {import('#client').Value<V>} */ (val).f) === 'number'\n\t);\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {import('#client').ComponentContext} */ (current_component_context)\n\t\t\t.function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = current_component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (current_component_context.c ??= new Map(\n\t\tget_parent_context(current_component_context) || undefined\n\t));\n}\n\n/**\n * @param {import('#client').ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @param {import('#client').Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update(signal, d = 1) {\n\tvar value = +get(signal);\n\tset(signal, value + d);\n\treturn value;\n}\n\n/**\n * @param {import('#client').Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre(signal, d = 1) {\n\treturn set(signal, +get(signal) + d);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\tobj = { ...obj };\n\tlet key;\n\tfor (key of keys) {\n\t\tdelete obj[key];\n\t}\n\treturn obj;\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {() => V} fallback lazy because could contain side effects\n * @returns {V}\n */\nexport function value_or_fallback(value, fallback) {\n\treturn value === undefined ? fallback() : value;\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {() => Promise<V>} fallback lazy because could contain side effects\n * @returns {Promise<V>}\n */\nexport async function value_or_fallback_async(value, fallback) {\n\treturn value === undefined ? fallback() : value;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcurrent_component_context = {\n\t\tp: current_component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (!runes) {\n\t\tcurrent_component_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = current_component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst effects = context_stack_item.e;\n\t\tif (effects !== null) {\n\t\t\tcontext_stack_item.e = null;\n\t\t\tfor (var i = 0; i < effects.length; i++) {\n\t\t\t\teffect(effects[i]);\n\t\t\t}\n\t\t}\n\t\tcurrent_component_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {V | import('#client').Value<V>} value\n * @returns {V}\n */\nexport function unwrap(value) {\n\tif (is_signal(value)) {\n\t\t// @ts-ignore\n\t\treturn get(value);\n\t}\n\t// @ts-ignore\n\treturn value;\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n", "import { DEV } from 'esm-env';\nimport {\n\tcurrent_component_context,\n\tcurrent_reaction,\n\tnew_deps,\n\tcurrent_effect,\n\tcurrent_untracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_current_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY\n} from '../constants.js';\nimport * as e from '../errors.js';\n\nlet inspect_effects = new Set();\n\n/**\n * @template V\n * @param {V} v\n * @returns {import('#client').Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function source(v) {\n\treturn {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @returns {import('#client').Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value) {\n\tconst s = source(initial_value);\n\ts.equals = safe_equals;\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (current_component_context !== null && current_component_context.l !== null) {\n\t\t(current_component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {import('#client').Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {import('#client').Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (current_reaction !== null && is_runes() && (current_reaction.f & DERIVED) !== 0) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e:\n\t\t//\n\t\t// $effect(() => x++)\n\t\t//\n\t\t// We additionally want to skip this logic when initialising store sources\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tcurrent_effect !== null &&\n\t\t\t(current_effect.f & CLEAN) !== 0 &&\n\t\t\t(current_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(current_effect, DIRTY);\n\t\t\t\tschedule_effect(current_effect);\n\t\t\t} else {\n\t\t\t\tif (current_untracked_writes === null) {\n\t\t\t\t\tset_current_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent_untracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tfor (const effect of inspect_effects) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {import('#client').Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === current_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {import('#client').Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {import('#client').Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * `<svelte:element this=\"%tag%\">` is a void element — it cannot have content\n * @param {string} tag\n */\nexport function dynamic_void_element_content(tag) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] dynamic_void_element_content\\n%c\\`<svelte:element this=\"${tag}\">\\` is a void element — it cannot have content`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"dynamic_void_element_content\");\n\t}\n}\n\n/**\n * The following properties cannot be cloned with `$state.snapshot` — the return value contains the originals:\n * \n * %properties%\n * @param {string | undefined | null} [properties]\n */\nexport function state_snapshot_uncloneable(properties) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_snapshot_uncloneable\\n%c${properties\n\t\t\t? `The following properties cannot be cloned with \\`$state.snapshot\\` — the return value contains the originals:\n\n${properties}`\n\t\t\t: \"Value cannot be cloned with `$state.snapshot` — the original value was returned\"}`, bold, normal);\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tconsole.warn(\"state_snapshot_uncloneable\");\n\t}\n}", "/** @import { TemplateNode } from '#client' */\n/** @import { Getters } from '#shared' */\nimport { is_void } from '../../constants.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\n\nconst snippet_symbol = Symbol.for('svelte.snippet');\n\n/**\n * @param {any} fn\n * @returns {import('svelte').Snippet}\n */\nexport function add_snippet_symbol(fn) {\n\tfn[snippet_symbol] = true;\n\treturn fn;\n}\n\n/**\n * Validate that the function handed to `{@render ...}` is a snippet function, and not some other kind of function.\n * @param {any} snippet_fn\n * @param {Record<string, any> | undefined} $$props Only passed if render tag receives arguments and is for the children prop\n */\nexport function validate_snippet(snippet_fn, $$props) {\n\tif (\n\t\t($$props?.$$slots?.default && typeof $$props.$$slots.default !== 'boolean') ||\n\t\t(snippet_fn && snippet_fn[snippet_symbol] !== true)\n\t) {\n\t\te.render_tag_invalid_argument();\n\t}\n\n\treturn snippet_fn;\n}\n\n/**\n * Validate that the function behind `<Component />` isn't a snippet.\n * @param {any} component_fn\n */\nexport function validate_component(component_fn) {\n\tif (component_fn?.[snippet_symbol] === true) {\n\t\te.snippet_used_as_component();\n\t}\n\n\treturn component_fn;\n}\n\n/**\n * @param {() => string} tag_fn\n * @returns {void}\n */\nexport function validate_void_dynamic_element(tag_fn) {\n\tconst tag = tag_fn();\n\tif (tag && is_void(tag)) {\n\t\tw.dynamic_void_element_content(tag);\n\t}\n}\n\n/** @param {() => unknown} tag_fn */\nexport function validate_dynamic_element_tag(tag_fn) {\n\tconst tag = tag_fn();\n\tconst is_string = typeof tag === 'string';\n\tif (tag && !is_string) {\n\t\te.svelte_element_invalid_this_value();\n\t}\n}\n\n/**\n * @param {any} store\n * @param {string} name\n */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\te.store_invalid_shape(name);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["effect", "push", "teardown", "derived", "is_micro_task_queued", "effect", "set", "teardown", "current_effect", "derived", "get", "source", "effect", "bold", "normal"]
}
