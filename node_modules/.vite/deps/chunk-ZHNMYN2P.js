// node_modules/svelte/src/internal/shared/utils.js
var is_array = Array.isArray;
var array_from = Array.from;
var object_keys = Object.keys;
var is_frozen = Object.isFrozen;
var object_freeze = Object.freeze;
var define_property = Object.defineProperty;
var get_descriptor = Object.getOwnPropertyDescriptor;
var get_descriptors = Object.getOwnPropertyDescriptors;
var object_prototype = Object.prototype;
var array_prototype = Array.prototype;
var get_prototype_of = Object.getPrototypeOf;
function is_function(thing) {
  return typeof thing === "function";
}
var noop = () => {
};
function is_promise(value) {
  return typeof (value == null ? void 0 : value.then) === "function";
}
function run(fn) {
  return fn();
}
function run_all(arr) {
  for (var i = 0; i < arr.length; i++) {
    arr[i]();
  }
}

// node_modules/svelte/src/internal/client/reactivity/equality.js
function equals(value) {
  return value === this.v;
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || a !== null && typeof a === "object" || typeof a === "function";
}
function safe_equals(value) {
  return !safe_not_equal(value, this.v);
}

export {
  is_array,
  array_from,
  object_keys,
  is_frozen,
  object_freeze,
  define_property,
  get_descriptor,
  get_descriptors,
  object_prototype,
  array_prototype,
  get_prototype_of,
  is_function,
  noop,
  is_promise,
  run,
  run_all,
  equals,
  safe_not_equal,
  safe_equals
};
//# sourceMappingURL=chunk-ZHNMYN2P.js.map
